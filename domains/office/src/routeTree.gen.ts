/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as AuthorizeRouteImport } from './routes/_authorize/route'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as AuthorizeLoginImport } from './routes/_authorize/login'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthorizeRouteRoute = AuthorizeRouteImport.update({
  id: '/_authorize',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const AuthorizeLoginRoute = AuthorizeLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthorizeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authorize': {
      id: '/_authorize'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthorizeRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_authorize/login': {
      id: '/_authorize/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthorizeLoginImport
      parentRoute: typeof AuthorizeRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthorizeRouteRoute: AuthorizeRouteRoute.addChildren({ AuthorizeLoginRoute }),
  ProtectedRouteRoute: ProtectedRouteRoute.addChildren({ ProtectedIndexRoute }),
  LogoutRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authorize",
        "/_protected",
        "/logout"
      ]
    },
    "/_authorize": {
      "filePath": "_authorize/route.tsx",
      "children": [
        "/_authorize/login"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/"
      ]
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_authorize/login": {
      "filePath": "_authorize/login.tsx",
      "parent": "/_authorize"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
